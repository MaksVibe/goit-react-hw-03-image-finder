{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGallery.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/common/Modal/Modal.jsx","components/common/Button/Button.jsx","App.js","index.js"],"names":["Searchbar","state","inputText","hendleSubmit","e","preventDefault","props","handelChange","setState","target","value","toLowerCase","className","onSubmit","this","type","onChange","autoComplete","autoFocus","placeholder","Component","ImageGallery","children","ImageGalleryItem","images","openModal","onModalClose","isModalOpen","map","webformatURL","id","largeImageURL","src","alt","onClick","modalRootRef","document","querySelector","Modal","handleEsc","code","handleBackdropClick","currentTarget","window","addEventListener","removeEventListener","createPortal","largeImage","Button","handleLoadMore","App","q","page","isLoading","error","fetchImages","a","BASE_URL","fetch","res","ok","json","Promise","reject","Error","statusText","input","prev","getImages","hits","message","loading","onModalOpen","largeURL","getAttribute","prevProps","prevState","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6f8fa548.chunk.js","sourcesContent":["import { Component } from \"react\";\n\nclass Searchbar extends Component {\n  state = {\n    inputText: \"\",\n  };\n  hendleSubmit = (e) => {\n    e.preventDefault();\n    this.props.hendleSubmit(this.state.inputText);\n  };\n  handelChange = (e) => {\n    this.setState({ inputText: e.target.value.toLowerCase() });\n  };\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.hendleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            onChange={this.handelChange}\n            value={this.state.inputText}\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","const ImageGallery = ({ children }) => {\n  return <ul className=\"ImageGallery\">{children}</ul>;\n};\n\nexport default ImageGallery;\n","// import Modal from \"../common/Modal/Modal\";\n\nconst ImageGalleryItem = ({ images, openModal, onModalClose, isModalOpen }) => {\n  return images.map(({ webformatURL, id, largeImageURL }) => (\n    <li className=\"ImageGalleryItem\" key={id}>\n      <img\n        src={webformatURL}\n        alt=\"\"\n        className=\"ImageGalleryItem-image\"\n        onClick={openModal}\n      />\n    </li>\n  ));\n};\n\nexport default ImageGalleryItem;\n","import { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nconst modalRootRef = document.querySelector(\"#modal-root\");\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleEsc);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleEsc);\n  }\n\n  handleEsc = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onModalClose();\n    }\n  };\n\n  handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      this.props.onModalClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img\n            src={this.props.largeImage}\n            alt=\"\"\n            onClick={this.props.onModalClose}\n          />\n        </div>\n      </div>,\n      modalRootRef\n    );\n  }\n}\n\nexport default Modal;\n","const Button = ({ handleLoadMore }) => {\n  return (\n    <button type=\"button\" onClick={handleLoadMore} className=\"Button\">\n      Load more\n    </button>\n  );\n};\n\nexport default Button;\n","import Searchbar from \"./components/Searchbar/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery.jsx\";\nimport ImageGalleryItem from \"./components/ImageGalleryItem/ImageGalleryItem.jsx\";\nimport Modal from \"./components/common/Modal/Modal.jsx\";\n\nimport { Component } from \"react\";\nimport Button from \"./components/common/Button/Button.jsx\";\n\nclass App extends Component {\n  state = {\n    q: \"\",\n    images: [],\n    page: 1,\n    isLoading: false,\n    error: null,\n    largeImage: \"\",\n    isModalOpen: false,\n  };\n\n  fetchImages = async (q, page = 1) => {\n    const BASE_URL = `https://pixabay.com/api/?key=24483741-f975205992ca850031cfb75db&q=${q}&page=${page}&image_type=photo&orientation=horizontal&per_page=12`;\n    const res = await fetch(BASE_URL);\n    return res.ok ? res.json() : Promise.reject(new Error(res.statusText));\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.q !== this.state.q || prevState.page !== this.state.page) {\n      this.getImages(this.state.q, this.state.page);\n    }\n  }\n\n  hendleSubmit = input => {\n    if (!input) return false;\n    this.setState({ q: input, images: [] });\n  };\n\n  handleLoadMore = () => {\n    this.setState(prev => ({ page: prev.page + 1 }));\n  };\n\n  getImages = async (q, page) => {\n    this.setState({ isLoading: true });\n    try {\n      const { hits } = await this.fetchImages(q, page);\n      this.setState(prev => ({ images: [...prev.images, ...hits] }));\n    } catch (error) {\n      this.setState({ error: error.message });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  onModalOpen = e => {\n    const largeURL = e.target.getAttribute(\"src\");\n    return this.setState({ isModalOpen: true, largeImage: largeURL });\n  };\n\n  onModalClose = () => {\n    return this.setState({ isModalOpen: false });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Searchbar hendleSubmit={this.hendleSubmit} />\n        {this.state.images.length > 0 && (\n          <ImageGallery>\n            <ImageGalleryItem\n              images={this.state.images}\n              openModal={this.onModalOpen}\n              onModalClose={this.onModalClose}\n              isModalOpen={this.state.isModalOpen}\n            />\n          </ImageGallery>\n        )}\n        {this.state.images.length > 11 && (\n          <Button handleLoadMore={this.handleLoadMore} />\n        )}\n        {this.state.isModalOpen && (\n          <Modal\n            largeImage={this.state.largeImage}\n            openModal={this.onModalOpen}\n            onModalClose={this.onModalClose}\n            isModalOpen={this.isModalOpen}\n          />\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}